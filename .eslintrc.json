{
    "env": {
        "es6": true
    },
    "parserOptions": {
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "settings": {
        "flowtype": {
            "onlyFilesWithFlowAnnotation": true
        },
        "react": {
            "version": "detect"
        }
    },
    "extends": [
        "eslint-config-standard"
    ],
    "plugins": [
        "babel",
        "eslint-comments",
        "import",
        "react",
        "react-hooks",
        "react-native"
    ],
    "rules": {
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "semi": [
            "error",
            "always"
        ],
        "space-before-function-paren": [
            "error",
            "never"
        ],
        "default-case": [
            "error",
            {
                "commentPattern": "^no default$"
            }
        ],
        "for-direction": "error",
        "getter-return": "error",
        "no-console": [
            "error",
            {
                "allow": [
                    "warn",
                    "error"
                ]
            }
        ],
        "no-extra-label": "error",
        "no-extra-semi": "error",
        "no-inner-declarations": "error",
        "no-label-var": "error",
        "no-loop-func": "error",
        "no-unused-labels": "error",
        "no-useless-concat": "error",
        "require-yield": "error",
        "rest-spread-spacing": [
            "error"
        ],
        "jsx-quotes": [
            "error",
            "prefer-single"
        ],
        "newline-after-var": [
            "error",
            "always"
        ],
        "arrow-spacing": "error",
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": [
                    "return",
                    "export",
                    "class"
                ]
            },
            {
                "blankLine": "always",
                "prev": "class",
                "next": [
                    "*"
                ]
            }
        ],
        "babel/no-invalid-this": "error",
        "eslint-comments/disable-enable-pair": [
            "error",
            {
                "allowWholeFile": true
            }
        ],
        "eslint-comments/no-aggregating-enable": "error",
        "eslint-comments/no-duplicate-disable": "error",
        "eslint-comments/no-unlimited-disable": "error",
        "eslint-comments/no-unused-disable": "error",
        "eslint-comments/no-unused-enable": "error",
        "import/extensions": [
            "error",
            {
                "js": "never",
                "json": "always"
            }
        ],
        "import/imports-first": "error",
        "import/no-amd": "error",
        "import/no-commonjs": "error",
        "import/no-extraneous-dependencies": "error",
        "import/no-self-import": "error",
        "import/no-unresolved": "error",
        "react/display-name": "error",
        "react/button-has-type": "error",
        "react/no-array-index-key": "error",
        "react/no-access-state-in-setstate": "error",
        "react/no-danger": "error",
        "react/no-danger-with-children": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/no-direct-mutation-state": "error",
        "react/no-find-dom-node": "error",
        "react/no-is-mounted": "error",
        "react/no-redundant-should-component-update": "error",
        "react/no-render-return-value": "error",
        "react/no-string-refs": "error",
        "react/no-this-in-sfc": "error",
        "react/no-typos": "error",
        "react/no-unescaped-entities": "error",
        "react/no-unknown-property": "error",
        "react/no-unused-prop-types": "error",
        "react/no-will-update-set-state": "error",
        "react/prefer-es6-class": "error",
        "react/react-in-jsx-scope": "error",
        "react/require-render-return": "error",
        "react/self-closing-comp": "error",
        "react/sort-comp": "error",
        "react/style-prop-object": "error",
        "react/void-dom-elements-no-children": "error",
        "react/jsx-boolean-value": [
            "error",
            "never"
        ],
        "react/jsx-curly-brace-presence": [
            "error",
            "never"
        ],
        "react/jsx-key": "error",
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-target-blank": "error",
        "react/jsx-no-undef": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/jsx-tag-spacing": [
            "error",
            {
                "closingSlash": "never",
                "beforeSelfClosing": "always",
                "afterOpening": "never"
            }
        ],
        "react/jsx-equals-spacing": "error",
        "react/jsx-curly-spacing": "error",
        "react/jsx-closing-bracket-location": "error",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react-native/no-unused-styles": "error",
        "react-native/split-platform-components": "error",
        "react-native/no-single-element-style-arrays": "error"
    },
    "overrides": [
        {
            "files": [
                "*.js"
            ],
            "parser": "babel-eslint",
            "parserOptions": {
                "requireConfigFile": false
            },
            "plugins": [
                "flowtype"
            ],
            "rules": {
                "flowtype/array-style-complex-type": [
                    "error",
                    "verbose"
                ],
                "flowtype/array-style-simple-type": [
                    "error",
                    "shorthand"
                ],
                "flowtype/boolean-style": [
                    "error",
                    "boolean"
                ],
                "flowtype/define-flow-type": "error",
                "flowtype/no-dupe-keys": "error",
                "flowtype/no-existential-type": "warn",
                "flowtype/no-primitive-constructor-types": "error",
                "flowtype/no-types-missing-file-annotation": "error",
                "flowtype/no-unused-expressions": [
                    "error",
                    {
                        "allowShortCircuit": true
                    }
                ],
                "flowtype/require-types-at-top": "error",
                "flowtype/require-valid-file-annotation": "error",
                "flowtype/use-flow-type": "error",
                "import/default": "error",
                "import/named": "error",
                "import/namespace": "error",
                "import/no-named-as-default": "error",
                "import/no-named-as-default-member": "error",
                "import/no-cycle": "error",
                "import/no-deprecated": "error"
            }
        },
        {
            "files": [
                "*.ts",
                "*.tsx"
            ],
            "parser": "@typescript-eslint/parser",
            "plugins": [
                "@typescript-eslint/eslint-plugin"
            ],
            "settings": {
                "import/extensions": [
                    ".js",
                    ".ts",
                    ".tsx"
                ],
                "import/parsers": {
                    "@typescript-eslint/parser": [
                        ".ts",
                        ".tsx"
                    ]
                },
                "import/resolver": {
                    "node": {
                        "extensions": [
                            ".js",
                            ".ts",
                            ".tsx"
                        ]
                    }
                }
            },
            "rules": {
                "@typescript-eslint/adjacent-overload-signatures": "error",
                "@typescript-eslint/array-type": "error",
                "@typescript-eslint/consistent-type-assertions": [
                    "error",
                    {
                        "assertionStyle": "as"
                    }
                ],
                "@typescript-eslint/member-delimiter-style": "error",
                "@typescript-eslint/no-array-constructor": "error",
                "@typescript-eslint/no-dynamic-delete": "error",
                "@typescript-eslint/no-empty-interface": [
                    "error",
                    {
                        "allowSingleExtends": true
                    }
                ],
                "@typescript-eslint/no-extra-non-null-assertion": "error",
                "@typescript-eslint/no-extraneous-class": "error",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-namespace": "error",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_"
                    }
                ],
                "@typescript-eslint/no-use-before-define": [
                    "error",
                    {
                        "functions": false,
                        "classes": false,
                        "variables": false,
                        "typedefs": false
                    }
                ],
                "@typescript-eslint/no-useless-constructor": "error",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-function-type": "error",
                "@typescript-eslint/prefer-namespace-keyword": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/triple-slash-reference": "error",
                "@typescript-eslint/unified-signatures": "error",
                "@typescript-eslint/type-annotation-spacing": "error",
                "@typescript-eslint/semi": [
                    "error"
                ],
                "@typescript-eslint/space-infix-ops": [
                    "error"
                ],
                "@typescript-eslint/indent": [
                    "error",
                    4,
                    {
                        "SwitchCase": 1
                    }
                ],
                "indent": "off",
                "semi": "off",
                "default-case": "off",
                "no-dupe-class-members": "off",
                "no-undef": "off",
                "no-unused-vars": "off",
                "no-array-constructor": "off",
                "no-use-before-define": "off"
            }
        },
        {
            "plugins": [
                "jest"
            ],
            "files": [
                "*.{spec,test}.{js,ts,tsx}",
                "**/__tests__/**/*.{js,ts,tsx}"
            ],
            "env": {
                "jest": true,
                "jest/globals": true
            },
            "rules": {
                "import/no-extraneous-dependencies": [
                    "error",
                    {
                        "devDependencies": true
                    }
                ],
                "jest/consistent-test-it": [
                    "error",
                    {
                        "fn": "it"
                    }
                ],
                "jest/expect-expect": "error",
                "jest/no-disabled-tests": "error",
                "jest/no-duplicate-hooks": "error",
                "jest/no-export": "error",
                "jest/no-focused-tests": "error",
                "jest/no-identical-title": "error",
                "jest/no-jasmine-globals": "error",
                "jest/no-test-prefixes": "error",
                "jest/no-test-return-statement": "error",
                "jest/no-truthy-falsy": "error",
                "jest/prefer-todo": "error",
                "jest/require-to-throw-message": "error",
                "jest/valid-describe": "error",
                "jest/valid-expect-in-promise": "error",
                "jest/valid-expect": "error",
                "jest/valid-title": "error"
            }
        },
        {
            "files": [
                "*.config.js",
                ".*rc.js"
            ],
            "env": {
                "node": true
            },
            "rules": {
                "import/no-commonjs": "off",
                "import/no-extraneous-dependencies": [
                    "error",
                    {
                        "devDependencies": true
                    }
                ]
            }
        }
    ]
}
